{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodCard","name","GoodList","goods","className","map","good","id","goodsWithId","index","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","sortBy","preparedGoods","sort","good1","good2","name1","name2","localeCompare","length","reverse","getPreparedGoods","type","onClick","cn","prev","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,oBAAI,UAAQ,OAAZ,SAAoBA,KCE7CC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIC,UAAU,WAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAwBL,KAAMK,EAAKL,MAApBK,EAAKC,UCcpBC,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGkCH,KAAI,SAACC,EAAMG,GAAP,MAAkB,CACxDR,KAAMK,EACNC,GAAIE,EAAQ,MAGRC,EAAsB,iBACtBC,EAAoB,WA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0Bf,EAAOgB,EAAQH,GACvC,IAAMI,EAAa,YAAOjB,GAqB1B,OAnBAiB,EAAcC,MAAK,SAACC,EAAOC,GACzB,IAAMC,EAAQF,EAAMrB,KACdwB,EAAQF,EAAMtB,KAEpB,OAAQkB,GACN,KAAKT,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITX,GACFI,EAAcQ,UAGTR,EAMcS,CAAiBrB,EAAaM,EAAWE,GAW9D,OACE,sBAAKZ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACE0B,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,IAC5BN,UAAW4B,IACR,iBACA,CAAE,WAAYlB,IAAcJ,IALjC,iCAWA,wBACEoB,KAAK,SACLC,QAAS,kBAAMhB,EAAaJ,IAC5BP,UAAW4B,IACR,oBACA,CAAE,WAAYlB,IAAcH,IALjC,4BAWA,wBACEmB,KAAK,SACLC,QA/BR,WACEd,GAAc,SAAAgB,GAAI,OAAKA,MA+BjB7B,UAAW4B,IACR,oBACD,CAAE,YAAahB,IALnB,sBAWEF,GAAaE,IACb,wBACEc,KAAK,SACLC,QAhDV,WACEhB,EAAa,IACbE,GAAc,IA+CNb,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAUD,MAAOe,QC9GvBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.75a87afa.chunk.js","sourcesContent":["export const GoodCard = ({ name }) => <li data-cy=\"Good\">{name}</li>;\n","import { GoodCard } from './GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul className=\"GoodList\">\n    {goods.map(good => (\n      <GoodCard key={good.id} name={good.name} />\n    ))}\n  </ul>\n);\n","import cn from 'classnames';\nimport { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithId = goodsFromServer.map((good, index) => ({\n  name: good,\n  id: index + 1,\n}));\n\nconst SORT_FIELD_ALPHABET = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'byLength';\n\nfunction getPreparedGoods(goods, sortBy, isReversed) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    const name1 = good1.name;\n    const name2 = good2.name;\n\n    switch (sortBy) {\n      case SORT_FIELD_ALPHABET:\n        return name1.localeCompare(name2);\n      case SORT_FIELD_LENGTH:\n        return name1.length - name2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsWithId, sortField, isReversed);\n\n  function resetGoods() {\n    setSortField('');\n    setIsReversed(false);\n  }\n\n  function reverseGoods() {\n    setIsReversed(prev => !prev);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          className={cn(\n            ('button is-info'),\n            ({ 'is-light': sortField !== SORT_FIELD_ALPHABET }),\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn(\n            ('button is-success'),\n            ({ 'is-light': sortField !== SORT_FIELD_LENGTH }),\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverseGoods}\n          className={cn(\n            ('button is-warning'),\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={resetGoods}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}